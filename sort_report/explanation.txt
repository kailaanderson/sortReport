The functions that take the longest are the [] operator and the bubble sort function. The square brackets operator takes 0.94 seconds and the bubble sort function takes 0.66 seconds. The [] function takes roughly 33% of the time it takes to run the program while the bubble sort function takes roughly 23% of the time it takes to run the program, both taking 56%, more than half the time, to run.
The square brackets operator is called in nearly every function in the program. That is why the profiler shows it with the highest amount of calls. While it is called often, it is rarely called with a specific number to access. Each time the function is called, it needs to get more information before being fully evaluated. For example, in the quick_sort function, the line int pivot = data[VeC_Idx((left + right) / 2)], has to get left + right, then multiply it by the idx, and then divide it by two before fully evaluating the [] operator. This causes this function to be a bottle neck.
Additionally, the bubble sort function takes a long time because it involves many loops. The first line in the function goes through a vector repeatedly. If the data is large, it will take a long time to iterate through the vector. additionally, while going through the vector, the function goes through the vector again to check if the elements are out of order. In the process, it uses the less than function and swap function. Both functions use the [] operator which takes long on its own, thus increasing the amount of time the bubble_sort function takes, making it a bottle neck function. 
